# Local Airflow Configuration
#
# Configuration for Airflow running in local DevContainer environment.
# Optimized for development with simplified setup and debugging capabilities.

# @package orchestration

# Airflow core configuration
core:
  executor: "{{cookiecutter.airflow_executor}}"  # LocalExecutor or SequentialExecutor
  
  # DAG settings
  dags_folder: "./dags"
  load_examples: false  # Don't load example DAGs in development
  load_default_connections: true
  
  # Parallelism settings (conservative for local development)
  parallelism: 4  # Total parallel tasks across all DAGs
  dag_concurrency: 2  # Max parallel tasks per DAG
  max_active_runs_per_dag: 1  # One active run per DAG for simplicity
  
  # Task execution
  default_task_retries: 1  # Fewer retries for faster feedback
  task_runner: "StandardTaskRunner"
  
  # Security (relaxed for development)
  security_key: "${AIRFLOW__CORE__FERNET_KEY}"  # From cookiecutter hook
  hide_sensitive_var_fields: false  # Show sensitive fields for debugging

# Database configuration (uses local postgres)
database:
  sql_alchemy_conn: "postgresql://{{cookiecutter.db_user}}:{{cookiecutter.db_password}}@postgres:5432/airflow"
  sql_alchemy_pool_size: 5
  sql_alchemy_pool_recycle: 1800
  sql_alchemy_pool_pre_ping: true

# Webserver configuration
webserver:
  # Network settings
  web_server_host: "0.0.0.0"  # Allow access from host
  web_server_port: 8080
  base_url: "http://localhost:8080"
  
  # Authentication (simple for development)
  authenticate: true
  auth_backend: "airflow.api.auth.backend.basic_auth"
  
  # UI settings
  expose_config: true  # Expose config in UI for debugging
  expose_hostname: true
  expose_stacktrace: true  # Show stack traces for debugging
  
  # Session settings
  secret_key: "dev_secret_key"  # Simple secret for development
  session_lifetime_minutes: 30  # Shorter sessions for security

# Scheduler configuration
scheduler:
  # Scheduling intervals
  dag_dir_list_interval: 30  # Check for new DAGs every 30 seconds
  catchup_by_default: false  # Don't catch up by default
  max_threads: 2  # Lower thread count for local development
  
  # Task scheduling
  schedule_after_task_execution: true
  orphaned_tasks_check_interval: 300  # 5 minutes
  child_process_log_directory: "./logs/scheduler"

# Logging configuration
logging:
  # Log levels
  logging_level: "DEBUG"  # Verbose logging for development
  fab_logging_level: "WARNING"  # Less verbose for Flask AppBuilder
  
  # Log locations
  base_log_folder: "./logs"
  dag_processor_manager_log_location: "./logs/dag_processor_manager/dag_processor_manager.log"
  
  # Log formatting
  simple_log_format: "[%(asctime)s] {%(filename)s:%(lineno)d} %(levelname)s - %(message)s"
  log_filename_template: "{{ ti.dag_id }}/{{ ti.task_id }}/{{ ts }}/{{ try_number }}.log"

# Development-specific features
dev_features:
  # Auto-reload DAGs when files change
  dag_discovery_safe_mode: false
  
  # Debugging features
  enable_xcom_pickling: true  # Allow complex objects in XCom
  store_dag_code: true  # Store DAG code in database for debugging
  
  # Development convenience
  auto_refresh_webserver: true
  load_examples: false  # Keep this false to avoid clutter

# Task execution settings
task_execution:
  # Timeouts
  task_run_timeout: 1800  # 30 minutes default task timeout
  dag_run_timeout: 3600   # 1 hour default DAG timeout
  
  # Resource settings (conservative for local)
  default_pool_task_slot_count: 4
  max_task_instances_per_dag: 16
  
  # Retry behavior
  default_retry_delay: 300  # 5 minutes between retries
  retry_exponential_backoff: false  # Linear retry delay

# Local environment integration
local_integration:
  # File system paths
  plugins_folder: "./airflow/plugins"
  requirements_file: "./airflow/requirements.txt"
  
  # Local database integration
  postgres_host: "postgres"
  postgres_port: 5432
  postgres_db: "airflow"
  
  # Local development tools
  enable_debug_mode: true
  enable_task_logs: true
  enable_dag_file_processor_logging: true

# API configuration (for local testing)
api:
  auth_backend: "airflow.api.auth.backend.basic_auth"
  enable_experimental_api: true  # For development/testing
  access_control_allow_origins: "http://localhost:3000,http://localhost:8080"

# Email configuration (development - no actual sending)
email:
  email_backend: "airflow.providers.smtp.hooks.smtp.SmtpHook"
  smtp_host: "localhost"
  smtp_port: 1025  # Fake SMTP server port
  smtp_mail_from: "airflow@localhost"
  smtp_starttls: false
  smtp_ssl: false

# Kubernetes configuration (disabled for local)
kubernetes:
  enable: false  # Not used in local development

# Monitoring (basic for local development)
monitoring:
  # Metrics
  statsd_on: false  # Disable metrics collection locally
  
  # Health checks
  enable_health_check: true
  health_check_threshold: 30